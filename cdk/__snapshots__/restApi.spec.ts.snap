// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rest api rest api 1`] = `
Object {
  "Outputs": Object {
    "RegoFyiApiEndpointFE52A268": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "RegoFyiApiC9E5D65C",
            },
            ".execute-api.us-east-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ApiARecordFA826994": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "RegoFyiApiApiDomain39F42A0B",
              "DistributionDomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::GetAtt": Array [
              "RegoFyiApiApiDomain39F42A0B",
              "DistributionHostedZoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "api.rego.fyi.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "AuthZFun2B67BA45": Object {
      "DependsOn": Array [
        "AuthZFunServiceRoleFC1807CF",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": {"S3Bucket":"cdk-hnb659fds-assets-123456789-us-east-1","S3Key":"[HASH REMOVED].zip"},
        "Handler": "main",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuthZFunServiceRoleFC1807CF",
            "Arn",
          ],
        },
        "Runtime": "provided.al2",
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthZFunApiTestStackAuthorizer82FEC614PermissionsE0CCE651": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuthZFun2B67BA45",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/authorizers/",
              Object {
                "Ref": "AuthorizerBD825682",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuthZFunServiceRoleFC1807CF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthorizerBD825682": Object {
      "Properties": Object {
        "AuthorizerResultTtlInSeconds": 0,
        "AuthorizerUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      ":",
                      Object {
                        "Fn::GetAtt": Array [
                          "AuthZFun2B67BA45",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":apigateway:",
              Object {
                "Fn::Select": Array [
                  3,
                  Object {
                    "Fn::Split": Array [
                      ":",
                      Object {
                        "Fn::GetAtt": Array [
                          "AuthZFun2B67BA45",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "AuthZFun2B67BA45",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "",
        "Name": "ApiTestStackAuthorizer82FEC614",
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
        "Type": "REQUEST",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "LambdalithFnE6677028": Object {
      "DependsOn": Array [
        "LambdalithFnServiceRoleEAD0A948",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": {"S3Bucket":"cdk-hnb659fds-assets-123456789-us-east-1","S3Key":"[HASH REMOVED].zip"},
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnServiceRoleEAD0A948",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdalithFnServiceRoleEAD0A948": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RegoFyiApiAccountAE6A213F": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "RegoFyiApiC9E5D65C",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiCloudWatchRole4BEF4CFB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "RegoFyiApiApiDomain39F42A0B": Object {
      "Properties": Object {
        "CertificateArn": Object {
          "Ref": "WebsiteCertD0D41D26",
        },
        "DomainName": "api.rego.fyi",
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "SecurityPolicy": "TLS_1_2",
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "RegoFyiApiApiDomainMapApiTestStackRegoFyiApi55A50515A1BFF373": Object {
      "Properties": Object {
        "DomainName": Object {
          "Ref": "RegoFyiApiApiDomain39F42A0B",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
        "Stage": Object {
          "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "RegoFyiApiC9E5D65C": Object {
      "Properties": Object {
        "Name": "RegoFyiApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RegoFyiApiCloudWatchRole4BEF4CFB": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "RegoFyiApiDeployment7CE69888f2eb72145333f00fd68c6db9d2a76548": Object {
      "DependsOn": Array [
        "RegoFyiApiproxydelete2A7C1609",
        "RegoFyiApiproxyget6D58FD76",
        "RegoFyiApiproxyOPTIONS44AECD97",
        "RegoFyiApiproxypatch1ADE401F",
        "RegoFyiApiproxypost92ACE304",
        "RegoFyiApiproxyput1EB8997E",
        "RegoFyiApiproxy7B881C16",
        "RegoFyiApidelete9727F751",
        "RegoFyiApiget3595BDAC",
        "RegoFyiApiOPTIONS46517348",
        "RegoFyiApipatch2208771C",
        "RegoFyiApipostB603C77F",
        "RegoFyiApiput4EE9BF65",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RegoFyiApiDeploymentStageprod3896E9EC": Object {
      "DependsOn": Array [
        "RegoFyiApiAccountAE6A213F",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "RegoFyiApiDeployment7CE69888f2eb72145333f00fd68c6db9d2a76548",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "ResourcePath": "/*",
            "ThrottlingBurstLimit": 200,
            "ThrottlingRateLimit": 100,
          },
        ],
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RegoFyiApiOPTIONS46517348": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://rego.fyi'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApidelete9727F751": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApideleteApiPermissionApiTestStackRegoFyiApi55A50515DELETEF20F0F0C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/DELETE/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApideleteApiPermissionTestApiTestStackRegoFyiApi55A50515DELETEEEBA6072": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/DELETE/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiget3595BDAC": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApigetApiPermissionApiTestStackRegoFyiApi55A50515GETB1858662": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApigetApiPermissionTestApiTestStackRegoFyiApi55A50515GET8D3C6F0A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipatch2208771C": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PATCH",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApipatchApiPermissionApiTestStackRegoFyiApi55A50515PATCHC45AFE89": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/PATCH/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipatchApiPermissionTestApiTestStackRegoFyiApi55A50515PATCHE8E610A6": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/PATCH/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipostApiPermissionApiTestStackRegoFyiApi55A50515POST0B0DBEDF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipostApiPermissionTestApiTestStackRegoFyiApi55A50515POSTD69B2638": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipostB603C77F": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxy7B881C16": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RegoFyiApiproxyOPTIONS44AECD97": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://rego.fyi'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxydelete2A7C1609": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxydeleteApiPermissionApiTestStackRegoFyiApi55A50515DELETEproxy6FC2BEE8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/DELETE/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxydeleteApiPermissionTestApiTestStackRegoFyiApi55A50515DELETEproxyE44522A8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/DELETE/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxyget6D58FD76": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxygetApiPermissionApiTestStackRegoFyiApi55A50515GETproxy54CD1CCC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/GET/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxygetApiPermissionTestApiTestStackRegoFyiApi55A50515GETproxy1968B63E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/GET/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxypatch1ADE401F": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PATCH",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxypatchApiPermissionApiTestStackRegoFyiApi55A50515PATCHproxyA466C991": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/PATCH/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxypatchApiPermissionTestApiTestStackRegoFyiApi55A50515PATCHproxyDBC478C7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/PATCH/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxypost92ACE304": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxypostApiPermissionApiTestStackRegoFyiApi55A50515POSTproxyF72637B7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/POST/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxypostApiPermissionTestApiTestStackRegoFyiApi55A50515POSTproxy1C8286AC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/POST/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxyput1EB8997E": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxyputApiPermissionApiTestStackRegoFyiApi55A50515PUTproxy7557345D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/PUT/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxyputApiPermissionTestApiTestStackRegoFyiApi55A50515PUTproxyAD1A66DF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/PUT/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiput4EE9BF65": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiputApiPermissionApiTestStackRegoFyiApi55A50515PUT07C20EFC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/PUT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiputApiPermissionTestApiTestStackRegoFyiApi55A50515PUT217502A8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/PUT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebsiteCertD0D41D26": Object {
      "Properties": Object {
        "DomainName": "rego.fyi",
        "DomainValidationOptions": Array [
          Object {
            "DomainName": "rego.fyi",
            "HostedZoneId": "DUMMY",
          },
          Object {
            "DomainName": "api.rego.fyi",
            "HostedZoneId": "DUMMY",
          },
        ],
        "SubjectAlternativeNames": Array [
          "api.rego.fyi",
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ApiTestStack/WebsiteCert",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rest api rest api 1`] = `
Object {
  "Outputs": Object {
    "RegoFyiApiEndpointFE52A268": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "RegoFyiApiC9E5D65C",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Any<Object>,
  "Resources": Object {
    "AuthZFun2B67BA45": Object {
      "DependsOn": Array [
        "AuthZFunServiceRoleFC1807CF",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Handler": "main",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AuthZFunServiceRoleFC1807CF",
            "Arn",
          ],
        },
        "Runtime": "go1.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthZFunAuthorizerPermissionsC492443D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AuthZFun2B67BA45",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/authorizers/",
              Object {
                "Ref": "AuthorizerBD825682",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AuthZFunServiceRoleFC1807CF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthorizerBD825682": Object {
      "Properties": Object {
        "AuthorizerResultTtlInSeconds": 0,
        "AuthorizerUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              Object {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "AuthZFun2B67BA45",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "",
        "Name": "Authorizer",
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
        "Type": "REQUEST",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "LambdalithFnE6677028": Object {
      "DependsOn": Array [
        "LambdalithFnServiceRoleEAD0A948",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnServiceRoleEAD0A948",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdalithFnServiceRoleEAD0A948": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RegoFyiApiAccountAE6A213F": Object {
      "DependsOn": Array [
        "RegoFyiApiC9E5D65C",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiCloudWatchRole4BEF4CFB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "RegoFyiApiC9E5D65C": Object {
      "Properties": Object {
        "Name": "RegoFyiApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RegoFyiApiCloudWatchRole4BEF4CFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RegoFyiApiDeployment7CE698883a368da4f0ac328c7709bd0de79e3a86": Object {
      "DependsOn": Array [
        "RegoFyiApiproxydelete2A7C1609",
        "RegoFyiApiproxyget6D58FD76",
        "RegoFyiApiproxyOPTIONS44AECD97",
        "RegoFyiApiproxypatch1ADE401F",
        "RegoFyiApiproxypost92ACE304",
        "RegoFyiApiproxyput1EB8997E",
        "RegoFyiApiproxy7B881C16",
        "RegoFyiApidelete9727F751",
        "RegoFyiApiget3595BDAC",
        "RegoFyiApiOPTIONS46517348",
        "RegoFyiApipatch2208771C",
        "RegoFyiApipostB603C77F",
        "RegoFyiApiput4EE9BF65",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RegoFyiApiDeploymentStageprod3896E9EC": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "RegoFyiApiDeployment7CE698883a368da4f0ac328c7709bd0de79e3a86",
        },
        "MethodSettings": Array [
          Object {
            "HttpMethod": "*",
            "ResourcePath": "/*",
            "ThrottlingBurstLimit": 200,
            "ThrottlingRateLimit": 100,
          },
        ],
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RegoFyiApiOPTIONS46517348": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://rego.fyi'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApidelete9727F751": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApideleteApiPermissionRegoFyiApiDELETE3BEE6394": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/DELETE/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApideleteApiPermissionTestRegoFyiApiDELETE9499FE94": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/DELETE/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiget3595BDAC": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApigetApiPermissionRegoFyiApiGETF764FD3A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApigetApiPermissionTestRegoFyiApiGET794B56CC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipatch2208771C": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PATCH",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApipatchApiPermissionRegoFyiApiPATCH8050C77D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/PATCH/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipatchApiPermissionTestRegoFyiApiPATCHF813F8D5": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/PATCH/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipostApiPermissionRegoFyiApiPOSTBBAA8EB3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipostApiPermissionTestRegoFyiApiPOSTAACCEB76": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApipostB603C77F": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxy7B881C16": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RegoFyiApiproxyOPTIONS44AECD97": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://rego.fyi'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxydelete2A7C1609": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxydeleteApiPermissionRegoFyiApiDELETEproxy46A1598B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/DELETE/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxydeleteApiPermissionTestRegoFyiApiDELETEproxy53299ABA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/DELETE/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxyget6D58FD76": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxygetApiPermissionRegoFyiApiGETproxyAAEF628A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/GET/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxygetApiPermissionTestRegoFyiApiGETproxy2F31CE23": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/GET/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxypatch1ADE401F": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PATCH",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxypatchApiPermissionRegoFyiApiPATCHproxy68E4B75D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/PATCH/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxypatchApiPermissionTestRegoFyiApiPATCHproxyE32688E1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/PATCH/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxypost92ACE304": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxypostApiPermissionRegoFyiApiPOSTproxy238027E9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/POST/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxypostApiPermissionTestRegoFyiApiPOSTproxyC33CFA91": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/POST/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxyput1EB8997E": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "RegoFyiApiproxy7B881C16",
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiproxyputApiPermissionRegoFyiApiPUTproxy6A867257": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/PUT/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiproxyputApiPermissionTestRegoFyiApiPUTproxyDA7EC023": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/PUT/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiput4EE9BF65": Object {
      "Properties": Object {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdalithFnE6677028",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "RegoFyiApiC9E5D65C",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "RegoFyiApiC9E5D65C",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RegoFyiApiputApiPermissionRegoFyiApiPUTD5CDC852": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/",
              Object {
                "Ref": "RegoFyiApiDeploymentStageprod3896E9EC",
              },
              "/PUT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RegoFyiApiputApiPermissionTestRegoFyiApiPUT650D7324": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdalithFnE6677028",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "RegoFyiApiC9E5D65C",
              },
              "/test-invoke-stage/PUT/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
